package com.unibo.cyberopoli.ui.theme

import androidx.compose.ui.graphics.Color

// Dark Theme Base
val CyberDark_Primary = Color(0xFF00FF00)
val CyberDark_OnPrimary = Color(0xFF0A0A0A)
val CyberDark_PrimaryContainer = Color(0xFF008000)
val CyberDark_OnPrimaryContainer = Color(0xFFB0FFB0)

val CyberDark_Secondary = Color(0xFF00FFFF)
val CyberDark_OnSecondary = Color(0xFF0A0A0A)
val CyberDark_SecondaryContainer = Color(0xFF008080)
val CyberDark_OnSecondaryContainer = Color(0xFFB0FFFF)

val CyberDark_Tertiary = Color(0xFFFF00FF)
val CyberDark_OnTertiary = Color(0xFF0A0A0A)
val CyberDark_TertiaryContainer = Color(0xFF800080)
val CyberDark_OnTertiaryContainer = Color(0xFFFFB0FF)

val CyberDark_Error = Color(0xFFFF4000)
val CyberDark_OnError = Color(0xFFF5F5F5)
val CyberDark_ErrorContainer = Color(0xFF401000)
val CyberDark_OnErrorContainer = Color(0xFFFFB0B0)

val CyberDark_Background = Color(0xFF0A0A0A)
val CyberDark_OnBackground = Color(0xFFF5F5F5)

val CyberDark_Surface = Color(0xFF1A1A1A)
val CyberDark_OnSurface = Color(0xFFF5F5F5)
val CyberDark_SurfaceVariant = Color(0xFF2A2A2A)
val CyberDark_OnSurfaceVariant = Color(0xFFC0C0C0)

val CyberDark_Outline = Color(0xFF404040)
val CyberDark_OutlineVariant = Color(0xFF303030)

val CyberDark_Scrim = Color(0x80000000)

val CyberDark_InverseSurface = Color(0xFFF5F5F5)
val CyberDark_InversePrimary = Color(0xFF008000)

val CyberDark_SurfaceDim = Color(0xFF0A0A0A)
val CyberDark_SurfaceBright = Color(0xFF333333)
val CyberDark_SurfaceContainerLowest = Color(0xFF050505)
val CyberDark_SurfaceContainerLow = Color(0xFF121212)
val CyberDark_SurfaceContainer = Color(0xFF1A1A1A)
val CyberDark_SurfaceContainerHigh = Color(0xFF2C2C2C)
val CyberDark_SurfaceContainerHighest = Color(0xFF383838)

// Light Theme Base
val CyberLight_Primary = Color(0xFF008000)
val CyberLight_OnPrimary = Color(0xFFF5F5F5)
val CyberLight_PrimaryContainer = Color(0xFFB0E0B0)
val CyberLight_OnPrimaryContainer = Color(0xFF0A0A0A)

val CyberLight_Secondary = Color(0xFF008080)
val CyberLight_OnSecondary = Color(0xFFF5F5F5)
val CyberLight_SecondaryContainer = Color(0xFFB0E0E0)
val CyberLight_OnSecondaryContainer = Color(0xFF0A0A0A)

val CyberLight_Tertiary = Color(0xFF800080)
val CyberLight_OnTertiary = Color(0xFFF5F5F5)
val CyberLight_TertiaryContainer = Color(0xFFE0B0E0)
val CyberLight_OnTertiaryContainer = Color(0xFF0A0A0A)

val CyberLight_Error = Color(0xFFFF4000)
val CyberLight_OnError = Color(0xFFF5F5F5)
val CyberLight_ErrorContainer = Color(0xFFFFD0D0)
val CyberLight_OnErrorContainer = Color(0xFF401000)

val CyberLight_Background = Color(0xFFF5F5F5)
val CyberLight_OnBackground = Color(0xFF0A0A0A)

val CyberLight_Surface = Color(0xFFE0E0E0)
val CyberLight_OnSurface = Color(0xFF0A0A0A)
val CyberLight_SurfaceVariant = Color(0xFFC0C0C0)
val CyberLight_OnSurfaceVariant = Color(0xFF404040)

val CyberLight_Outline = Color(0xFFA0A0A0)
val CyberLight_OutlineVariant = Color(0xFFB0B0B0)

val CyberLight_Scrim = Color(0x80000000)

val CyberLight_InverseSurface = Color(0xFF1A1A1A)
val CyberLight_InverseOnSurface = Color(0xFFF5F5F5)
val CyberLight_InversePrimary = Color(0xFF00FF00)

val CyberLight_SurfaceDim = Color(0xFFDCDCDC)
val CyberLight_SurfaceBright = Color(0xFFF5F5F5)
val CyberLight_SurfaceContainerLowest = Color(0xFFFFFFFF)
val CyberLight_SurfaceContainerLow = Color(0xFFF0F0F0)
val CyberLight_SurfaceContainer = Color(0xFFE0E0E0)
val CyberLight_SurfaceContainerHigh = Color(0xFFD6D6D6)
val CyberLight_SurfaceContainerHighest = Color(0xFFCBCBCB)


// CyberDark MediumContrast
val CyberDarkMediumContrast_Primary = Color(0xFF33FF33)
val CyberDarkMediumContrast_OnPrimary = Color(0xFF000000)
val CyberDarkMediumContrast_PrimaryContainer = Color(0xFF00A000)
val CyberDarkMediumContrast_OnPrimaryContainer = Color(0xFF000000)
val CyberDarkMediumContrast_Secondary = Color(0xFF33FFFF)
val CyberDarkMediumContrast_OnSecondary = Color(0xFF000000)
val CyberDarkMediumContrast_SecondaryContainer = Color(0xFF00A0A0)
val CyberDarkMediumContrast_OnSecondaryContainer = Color(0xFF000000)
val CyberDarkMediumContrast_Tertiary = Color(0xFFFF33FF)
val CyberDarkMediumContrast_OnTertiary = Color(0xFF000000)
val CyberDarkMediumContrast_TertiaryContainer = Color(0xFFA000A0)
val CyberDarkMediumContrast_OnTertiaryContainer = Color(0xFF000000)
val CyberDarkMediumContrast_Error = Color(0xFFFF6633)
val CyberDarkMediumContrast_OnError = Color(0xFF000000)
val CyberDarkMediumContrast_ErrorContainer = Color(0xFF662000)
val CyberDarkMediumContrast_OnErrorContainer = Color(0xFFFFFFFF)
val CyberDarkMediumContrast_Background = Color(0xFF0A0A0A)
val CyberDarkMediumContrast_OnBackground = Color(0xFFFFFFFF)
val CyberDarkMediumContrast_Surface = Color(0xFF1A1A1A)
val CyberDarkMediumContrast_OnSurface = Color(0xFFFFFFFF)
val CyberDarkMediumContrast_SurfaceVariant = Color(0xFF3C3C3C)
val CyberDarkMediumContrast_OnSurfaceVariant = Color(0xFFE0E0E0)
val CyberDarkMediumContrast_Outline = Color(0xFF606060)
val CyberDarkMediumContrast_OutlineVariant = Color(0xFF484848)
val CyberDarkMediumContrast_Scrim = Color(0x99000000)
val CyberDarkMediumContrast_InverseSurface = Color(0xFFFFFFFF)
val CyberDarkMediumContrast_InverseOnSurface = Color(0xFF000000)
val CyberDarkMediumContrast_InversePrimary = Color(0xFF006600)
val CyberDarkMediumContrast_SurfaceDim = Color(0xFF0A0A0A)
val CyberDarkMediumContrast_SurfaceBright = Color(0xFF404040)
val CyberDarkMediumC_SurfaceContainerLowest = Color(0xFF030303)
val CyberDarkMediumC_SurfaceContainerLow = Color(0xFF101010)
val CyberDarkMediumC_SurfaceContainer = Color(0xFF1A1A1A)
val CyberDarkMediumC_SurfaceContainerHigh = Color(0xFF303030)
val CyberDarkMediumC_SurfaceContainerHighest = Color(0xFF3F3F3F)

// CyberDark HighContrast
val CyberDarkHighContrast_Primary = Color(0xFF66FF66)
val CyberDarkHighContrast_OnPrimary = Color(0xFF000000)
val CyberDarkHighContrast_PrimaryContainer = Color(0xFF00CC00)
val CyberDarkHighContrast_OnPrimaryContainer = Color(0xFF000000)
val CyberDarkHighContrast_Secondary = Color(0xFF66FFFF)
val CyberDarkHighContrast_OnSecondary = Color(0xFF000000)
val CyberDarkHighContrast_SecondaryContainer = Color(0xFF00CCCC)
val CyberDarkHighContrast_OnSecondaryContainer = Color(0xFF000000)
val CyberDarkHighContrast_Tertiary = Color(0xFFFF66FF)
val CyberDarkHighContrast_OnTertiary = Color(0xFF000000)
val CyberDarkHighContrast_TertiaryContainer = Color(0xFFCC00CC)
val CyberDarkHighContrast_OnTertiaryContainer = Color(0xFF000000)
val CyberDarkHighContrast_Error = Color(0xFFFF8C66)
val CyberDarkHighContrast_OnError = Color(0xFF000000)
val CyberDarkHighContrast_ErrorContainer = Color(0xFF803000)
val CyberDarkHighContrast_OnErrorContainer = Color(0xFFFFFFFF)
val CyberDarkHighContrast_Background = Color(0xFF0A0A0A)
val CyberDarkHighContrast_OnBackground = Color(0xFFFFFFFF)
val CyberDarkHighContrast_Surface = Color(0xFF1A1A1A)
val CyberDarkHighContrast_OnSurface = Color(0xFFFFFFFF)
val CyberDarkHighContrast_SurfaceVariant = Color(0xFF4D4D4D)
val CyberDarkHighContrast_OnSurfaceVariant = Color(0xFFFFFFFF)
val CyberDarkHighContrast_Outline = Color(0xFF808080)
val CyberDarkHighContrast_OutlineVariant = Color(0xFF666666)
val CyberDarkHighContrast_Scrim = Color(0xB3000000)
val CyberDarkHighContrast_InverseSurface = Color(0xFFFFFFFF)
val CyberDarkHighContrast_InverseOnSurface = Color(0xFF000000)
val CyberDarkHighContrast_InversePrimary = Color(0xFF004D00)
val CyberDarkHighContrast_SurfaceDim = Color(0xFF0A0A0A)
val CyberDarkHighContrast_SurfaceBright = Color(0xFF4D4D4D)
val CyberDarkHighContrast_SurfaceContainerLowest = Color(0xFF000000)
val CyberDarkHighContrast_SurfaceContainerLow = Color(0xFF0D0D0D)
val CyberDarkHighContrast_SurfaceContainer = Color(0xFF1A1A1A)
val CyberDarkHighContrast_SurfaceContainerHigh = Color(0xFF333333)
val CyberDarkHighContrast_SurfaceContainerHighest = Color(0xFF454545)

// CyberLight MediumContrast
val CyberLightMediumContrast_Primary = Color(0xFF006000)
val CyberLightMediumContrast_OnPrimary = Color(0xFFFFFFFF)
val CyberLightMediumContrast_PrimaryContainer = Color(0xFF00A000)
val CyberLightMediumContrast_OnPrimaryContainer = Color(0xFFFFFFFF)
val CyberLightMediumContrast_Secondary = Color(0xFF006060)
val CyberLightMediumContrast_OnSecondary = Color(0xFFFFFFFF)
val CyberLightMediumContrast_SecondaryContainer = Color(0xFF00A0A0)
val CyberLightMediumContrast_OnSecondaryContainer = Color(0xFFFFFFFF)
val CyberLightMediumContrast_Tertiary = Color(0xFF600060)
val CyberLightMediumContrast_OnTertiary = Color(0xFFFFFFFF)
val CyberLightMediumContrast_TertiaryContainer = Color(0xFFA000A0)
val CyberLightMediumContrast_OnTertiaryContainer = Color(0xFFFFFFFF)
val CyberLightMediumContrast_Error = Color(0xFFCC3300)
val CyberLightMediumContrast_OnError = Color(0xFFFFFFFF)
val CyberLightMediumContrast_ErrorContainer = Color(0xFFFFB8B8)
val CyberLightMediumContrast_OnErrorContainer = Color(0xFF000000)
val CyberLightMediumContrast_Background = Color(0xFFF5F5F5)
val CyberLightMediumContrast_OnBackground = Color(0xFF000000)
val CyberLightMediumContrast_Surface = Color(0xFFE0E0E0)
val CyberLightMediumContrast_OnSurface = Color(0xFF000000)
val CyberLightMediumContrast_SurfaceVariant = Color(0xFFA0A0A0)
val CyberLightMediumContrast_OnSurfaceVariant = Color(0xFF000000)
val CyberLightMediumContrast_Outline = Color(0xFF808080)
val CyberLightMediumContrast_OutlineVariant = Color(0xFF909090)
val CyberLightMediumContrast_Scrim = Color(0x99000000)
val CyberLightMediumContrast_InverseSurface = Color(0xFF000000)
val CyberLightMediumContrast_InverseOnSurface = Color(0xFFFFFFFF)
val CyberLightMediumContrast_InversePrimary = Color(0xFF33FF33)
val CyberLightMediumContrast_SurfaceDim = Color(0xFFD1D1D1)
val CyberLightMediumContrast_SurfaceBright = Color(0xFFF5F5F5)
val CyberLightMediumC_SurfaceContainerLowest = Color(0xFFFFFFFF)
val CyberLightMediumC_SurfaceContainerLow = Color(0xFFE8E8E8)
val CyberLightMediumC_SurfaceContainer = Color(0xFFDCDCDC)
val CyberLightMediumC_SurfaceContainerHigh = Color(0xFFCFCFCF)
val CyberLightMediumC_SurfaceContainerHighest = Color(0xFFC2C2C2)

// CyberLight HighContrast
val CyberLightHighContrast_Primary = Color(0xFF004000)
val CyberLightHighContrast_OnPrimary = Color(0xFFFFFFFF)
val CyberLightHighContrast_PrimaryContainer = Color(0xFF006000)
val CyberLightHighContrast_OnPrimaryContainer = Color(0xFFFFFFFF)
val CyberLightHighContrast_Secondary = Color(0xFF004040)
val CyberLightHighContrast_OnSecondary = Color(0xFFFFFFFF)
val CyberLightHighContrast_SecondaryContainer = Color(0xFF006060)
val CyberLightHighContrast_OnSecondaryContainer = Color(0xFFFFFFFF)
val CyberLightHighContrast_Tertiary = Color(0xFF400040)
val CyberLightHighContrast_OnTertiary = Color(0xFFFFFFFF)
val CyberLightHighContrast_TertiaryContainer = Color(0xFF600060)
val CyberLightHighContrast_Error = Color(0xFF8B0000)
val CyberLightHighContrast_OnError = Color(0xFFFFFFFF)
val CyberLightHighContrast_ErrorContainer = Color(0xFFFFABAB)
val CyberLightHighContrast_OnErrorContainer = Color(0xFF000000)
val CyberLightHighContrast_Background = Color(0xFFF5F5F5)
val CyberLightHighContrast_OnBackground = Color(0xFF000000)
val CyberLightHighContrast_Surface = Color(0xFFE0E0E0)
val CyberLightHighContrast_OnSurface = Color(0xFF000000)
val CyberLightHighContrast_SurfaceVariant = Color(0xFF808080)
val CyberLightHighContrast_OnSurfaceVariant = Color(0xFF000000)
val CyberLightHighContrast_Outline = Color(0xFF666666)
val CyberLightHighContrast_OutlineVariant = Color(0xFF707070)
val CyberLightHighContrast_Scrim = Color(0xB3000000)
val CyberLightHighContrast_InverseSurface = Color(0xFF000000)
val CyberLightHighContrast_InverseOnSurface = Color(0xFFFFFFFF)
val CyberLightHighContrast_InversePrimary = Color(0xFF66FF66)
val CyberLightHighContrast_SurfaceDim = Color(0xFFC2C2C2)
val CyberLightHighContrast_SurfaceBright = Color(0xFFF5F5F5)
val CyberLightHighContrast_SurfaceContainerLowest = Color(0xFFFFFFFF)
val CyberLightHighContrast_SurfaceContainerLow = Color(0xFFDADADA)
val CyberLightHighContrast_SurfaceContainer = Color(0xFFCFCFCF)
val CyberLightHighContrast_SurfaceContainerHigh = Color(0xFFB8B8B8)
val CyberLightHighContrast_SurfaceContainerHighest = Color(0xFFA0A0A0)